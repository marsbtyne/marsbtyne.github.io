{"version":3,"sources":["components/UI/Spinner.module.css","firebase.js","config.js","axios.js","redux/actions/fridge.js","redux/actions/actionTypes.js","redux/selectors/index.js","components/UI/InfoBox.js","components/LocationPin.js","components/CheckFridge.js","components/UI/FridgeModal.js","components/UI/Header.js","components/FridgeForm.js","components/InfoPage.js","components/NewMap.js","components/UI/Spinner.js","components/Map.js","containers/FridgeFinder.js","App.js","serviceWorker.js","svc.js","redux/reducers/fridge.js","index.js","containers/container.module.css","components/UI/Modal.module.css"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","google","defaultCenter","address","lat","lng","defaultZoom","instance","axios","create","baseURL","defaults","headers","post","put","database","storage","createActionObj","type","data","addFridgeSuccess","id","submitFridge","submissionData","dispatch","onSuccess","a","error","response","name","Geocode","setApiKey","config","updatedData","streetAddress","fullAddress","concat","borough","fromAddress","geocodeResponse","results","geometry","location","console","checkFridge","fridge","image","checkData","log","postCheckImage","checkFridgeSuccess","notes","date","JSON","stringify","Date","url","confirmFridgeSuccess","checkID","fridgeId","checkId","ref","on","snapshot","child","getDownloadURL","then","set","postCheckImageSuccess","getCurrentFridge","state","fridges","find","f","currentFridge","InfoBox","className","classes","Info","popupContainer","popuBubbleAnchor","Box","border","pad","background","color","popupBubble","this","props","fridgeData","Component","LocationPin","showInfoBox","clickHandler","Fragment","onClick","event","CheckFridge","useState","setImage","useDispatch","class","onChange","e","target","files","for","Form","onSubmit","check","value","cancelCheck","gap","FormField","htmlFor","TextInput","size","placeholder","label","component","TextArea","direction","Button","active","primary","FridgeModal","checking","setChecking","useEffect","neighborhood","link","instagram","checks","imageURL","instaLink","lastChecked","c","checkList","key","push","getChecks","lastC","length","parse","note","toLocaleString","lastPic","Image","fit","height","width","src","margin","style","alignItems","checkButton","bottom","checkForm","confirmCheck","submitCheck","editButton","editFridge","overflow","flex","align","tag","position","Heading","level","plain","alignSelf","onClose","icon","fontSize","Anchor","href","getMapLink","Head","Header","justify","Text","FridgeForm","setValue","header","nextValue","htmlfor","Select","options","top","InfoPage","Paragraph","fill","Footer","horizontal","vertical","textAlign","Modal","setAppElement","defaultStyles","content","maxWidth","NewMap","openSubmissionModal","setState","isSubmitModalOpen","openEditModal","isEditModalOpen","isInfoModalOpen","openModal","setCurrentFridge","downloadJSON","fetchFridgesJSON","window","URL","createObjectURL","Blob","document","createElement","setAttribute","body","appendChild","click","parentNode","removeChild","closeEditModal","closeModal","fridgeAdded","postData","updateFridge","updateData","isChecking","fetchFridges","markers","map","path","exact","render","Container","isOpen","onRequestClose","bootstrapURLKeys","yesIWantToUseGoogleMapApiInternals","connect","fridgeID","fetchedFridges","get","responseType","timeout","spinner","Loader","Map","bindResizeListener","maps","addDomListenerOnce","gestureHandling","handleApiLoaded","onModalOpen","getFridge","modal","modalClosedHandler","onFridgeChecked","handleChange","textInput","React","createRef","focusTextInput","bind","submitButton","progress","current","focus","modalInfo","status","confirmed","parsed","onFridgeConfirmed","Layer","full","onClickOutside","zoomLevel","onGoogleApiLoaded","toggleHover","hover","fetchedFridge","actions","getFridgeChecks","FridgeFinder","h","onFridgeAdded","addFridge","onFridgesLoad","Spinner","fridgeSubmission","animation","onEsc","contentWrap","CheckBox","toggle","checked","App","loading","Helmet","Grommet","Boolean","hostname","match","initialState","submitted","reducer","action","newFridge","updatedF","updatedFridges","lastCheck","updated","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","init","app","ReactDOM","getElementById","script","defer","head","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c48fddbf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__b2Z2P\",\"load1\":\"Spinner_load1__2Lq4d\"};","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCOvDGXIuekFUUzSPh5l1940wCB657NudI\",\r\n    authDomain: \"nycfridge-1595334632389.firebaseapp.com\",\r\n    databaseURL: \"https://nycfridge-1595334632389.firebaseio.com\",\r\n    projectId: \"nycfridge-1595334632389\",\r\n    storageBucket: \"nycfridge-1595334632389.appspot.com\",\r\n    messagingSenderId: \"1012323391989\",\r\n    appId: \"1:1012323391989:web:0326829c1bd942705fe8bc\",\r\n    measurementId: \"G-8G077TP9PC\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n \r\n  \r\n  export default firebase;","export default {\r\n    google: {\r\n        apiKey: 'AIzaSyCOvDGXIuekFUUzSPh5l1940wCB657NudI',\r\n    },\r\n    defaultCenter: {\r\n        address: '252 Broadway Brooklyn NY 11211',\r\n        lat: 40.7,\r\n        lng: -73.9\r\n    },\r\n    defaultZoom: 12\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://nycfridge-1595334632389.firebaseio.com/',\r\n});\r\n\r\ninstance.defaults.headers.post['Content-Type'] ='application/x-www-form-urlencoded';\r\naxios.defaults.headers.put['Content-Type'] ='application/x-www-form-urlencoded';\r\n\r\nexport default instance;","import Geocode from \"react-geocode\";\r\n\r\nimport * as actionTypes from './actionTypes';\r\nimport axios from '../../axios';\r\n// import { fetchFridges } from '../../svc';\r\nimport firebase from '../../firebase';\r\nimport config from '../../config'\r\n\r\nvar database = firebase.database();\r\nlet storage = firebase.storage();\r\n\r\n/**\r\n * Generic action creator\r\n * @param {actionType enum} type \r\n * @param {Object} data - action payload to pass to reducer\r\n */\r\nexport const createActionObj = (type, data = {}) => ({\r\n  type, data\r\n});\r\n\r\nexport const addFridgeSuccess = (id, data) => {\r\n  return {\r\n    type: actionTypes.ADD_FRIDGE,\r\n    data: data,\r\n    id: id\r\n  }\r\n};\r\n\r\nexport const setCurrentFridge = (fridgeID) => {\r\n  return dispatch => {\r\n    dispatch(createActionObj(actionTypes.SET_CURRENT, fridgeID));\r\n  }\r\n}\r\n\r\nexport const fetchFridges = () => {\r\n  return async dispatch => {\r\n    function onSuccess(response) {\r\n      dispatch(createActionObj(actionTypes.LOAD_FRIDGES, response));\r\n      return response;\r\n    }\r\n    dispatch(createActionObj(actionTypes.FETCH_FRIDGE_START));\r\n    const fetchedFridges = [];\r\n    try {\r\n      const response = await axios.get('/fridges.json');\r\n      for (let key in response.data) {\r\n        fetchedFridges.push({\r\n          ...response.data[key],\r\n          id: key\r\n        });\r\n      }\r\n      return onSuccess(fetchedFridges);\r\n    } catch (error) {\r\n      console.error('Data was not fetched.')\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchFridgesJSON = () => {\r\n  return async () => {\r\n    try {\r\n      const response = await axios.get('/fridges.json', {\r\n        responseType: 'blob',\r\n        timeout: 30000,\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Data was not fetched.')\r\n    }\r\n  }\r\n}\r\n\r\nexport const submitFridge = (submissionData) => {\r\n  return async dispatch => {\r\n    function onSuccess(response, data) {\r\n      dispatch(addFridgeSuccess(response.data.name, data));\r\n      return response;\r\n    }\r\n    function onError(error) {\r\n      return error;\r\n    }\r\n    dispatch(createActionObj(actionTypes.ADD_FRIDGE_START));\r\n    Geocode.setApiKey(config.google.apiKey);\r\n    let updatedData = {};\r\n    let streetAddress = submissionData.streetAddress;\r\n    let fullAddress = streetAddress.concat(\" \", submissionData.borough, \" NY\");\r\n    try {\r\n      const geocodeResponse = await Geocode.fromAddress(fullAddress);\r\n      const { lat, lng } = geocodeResponse.results[0].geometry.location;\r\n      updatedData = {\r\n        ...submissionData,\r\n        lat: lat,\r\n        lng: lng\r\n      }\r\n      try {\r\n        const response = await axios.post('/fridges.json', updatedData);\r\n        return onSuccess(response, updatedData);\r\n      } catch (error) {\r\n        console.error(\"Could not submit to database\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Could not fetch coordinates\");\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateFridge = (updatedData, fridgeID) => {\r\n  return async dispatch => {\r\n    function onSuccess(response) {\r\n      console.log(response.data);\r\n      dispatch(createActionObj(actionTypes.UPDATE_FRIDGE, response.data));\r\n      return response;\r\n    }\r\n    console.log(fridgeID);\r\n    try {\r\n      // const headers = {\r\n      //   'Content-Type': 'application/json',\r\n      // };\r\n      let url = '/fridges/'.concat(fridgeID, \".json\");\r\n      // const response = await axios.put(url, updatedData, {headers: {\r\n      //   'Access-Control-Allow-Origin': true,\r\n      // }})\r\n      const response = await axios.put(url, updatedData);\r\n      return onSuccess(response);\r\n    } catch (error){\r\n      console.error(\"Could not update fridge.\")\r\n    }\r\n  }\r\n}\r\n\r\nexport const checkFridge = (data, fridge, image) => {\r\n  return async dispatch => {\r\n    function onSuccess(id, response, image, checkData) {\r\n      console.log('success', response);\r\n      if (image) {\r\n        console.log('image', image)\r\n        dispatch(postCheckImage(id, response.data.name, image))\r\n      }\r\n      dispatch(checkFridgeSuccess(response.data.name, checkData));\r\n      return response;\r\n    }\r\n    dispatch(createActionObj(actionTypes.CHECK_START));\r\n    try {\r\n      let checkData = {\r\n        name: data.name,\r\n        notes: data.notes,\r\n        date: JSON.stringify(new Date())\r\n      }\r\n      let url = '/fridges/'.concat(fridge.id, '/checks.json');\r\n      const response = await axios.post(url, checkData)\r\n      return onSuccess(fridge.id, response, image, checkData);\r\n    } catch (error) {\r\n      console.error(\"Could not post check\")\r\n    }\r\n  }\r\n}\r\n\r\nexport const getFridge = (fridgeID) => {\r\n  return async dispatch => {\r\n    function onSuccess(fetchedFridge) {\r\n      dispatch(createActionObj(actionTypes.GET_FRIDGE, fetchedFridge))\r\n    }\r\n    let url = '/fridges/'.concat(fridgeID, '.json');\r\n    try {\r\n      const response = await axios.get(url);\r\n      const fetchedFridge = {\r\n        ...response.data,\r\n        id: fridgeID\r\n      }\r\n      return onSuccess(fetchedFridge)\r\n    } catch(error) {\r\n        console.log(error);\r\n  }\r\n}\r\n}\r\n\r\nexport const confirmFridge = (fridge) => {\r\n  let data = {\r\n    ...fridge,\r\n    confirmed: true\r\n  }\r\n  return dispatch => {\r\n    let url = '/fridges/'.concat(fridge.id, '.json');\r\n    axios.put(url, data)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        dispatch(confirmFridgeSuccess(fridge.id));\r\n      })\r\n  }\r\n}\r\nexport const confirmFridgeSuccess = (id) => {\r\n  return {\r\n    type: actionTypes.CONFIRM_FRIDGE,\r\n    id: id\r\n  }\r\n};\r\n\r\nexport const checkFridgeSuccess = (checkID, checkData) => {\r\n  return {\r\n    type: actionTypes.CHECK_FRIDGE,\r\n    data: checkData,\r\n    id: checkID\r\n  }\r\n};\r\n\r\nexport const postCheckImageSuccess = (url, checkId) => {\r\n  return {\r\n    type: actionTypes.POST_CHECK_IMAGE,\r\n    url: url,\r\n    id: checkId\r\n  }\r\n}\r\n\r\nexport const postCheckImage = (fridgeId, checkId, image) => {\r\n\r\n  return dispatch => {\r\n    const uploadTask = storage.ref(`images/${fridgeId}/${checkId}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot => { },\r\n      error => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(`images/${fridgeId}/`)\r\n          .child(checkId)\r\n          .getDownloadURL()\r\n          .then(url => {\r\n            console.log('postCheckImage url', url);\r\n            database.ref(`fridges/${fridgeId}/imageURL`).set(url);\r\n            dispatch(postCheckImageSuccess(url, checkId));\r\n          });\r\n      }\r\n    );\r\n  };\r\n};\r\n\r\n\r\nexport const getFridgeChecks = (id) => {\r\n  return dispatch => {\r\n    let url = '/fridges/'.concat(id, '/checks.json');\r\n    axios.get(url)\r\n      .then(response => {\r\n        dispatch(createActionObj(actionTypes.GET_FRIDGE_CHECKS, response.data));\r\n      });\r\n  }\r\n}\r\n\r\n\r\n\r\n","export const LOAD_FRIDGES = 'LOAD_FRIDGES';\r\nexport const CONFIRM_FRIDGE = 'CONFIRM_FRIDGE';\r\n\r\nexport const FETCH_FRIDGE_START = 'FETCH_FRIDGE_START';\r\nexport const FETCH_FRIDGE_FAIL = 'FETCH_FRIDGE_FAIL';\r\n\r\nexport const GET_FRIDGE = 'GET_FRIDGE';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\n\r\nexport const UPDATE_FRIDGE = 'UPDATE_FRIDGE';\r\n\r\nexport const ADD_FRIDGE = 'ADD_FRIDGE';\r\nexport const ADD_FRIDGE_START = 'ADD_FRIDGE_START'\r\n\r\nexport const CHECK_START = 'CHECK_START';\r\nexport const CHECK_FRIDGE = 'CHECK_FRIDGE';\r\nexport const POST_CHECK_IMAGE = 'POST_CHECK_IMAGE';\r\n\r\nexport const GET_FRIDGE_CHECKS = 'GET_FRIDGE_CHECKS';\r\n\r\n","export const getFridges = state => state.fridges;\r\n\r\nexport const getCurrentFridge = state =>\r\n  state.fridges.find(f => f.id == state.currentFridge)","import React, { Component } from 'react';\r\n\r\nimport { Box } from 'grommet';\r\n\r\nimport classes from  './Modal.module.css';\r\n\r\n\r\nclass InfoBox extends Component {\r\n  render () {\r\n    return (\r\n      <div className={classes.Info}>\r\n        <div className={classes.popupContainer}>\r\n        <div className={classes.popuBubbleAnchor}>\r\n          <Box border=\"horizontal\" pad=\"xsmall\"\r\n        background={{ color: 'brand' }} className={classes.popupBubble}>\r\n            {this.props.fridgeData.name}<br/>\r\n            {this.props.fridgeData.streetAddress} <br />\r\n          </Box >\r\n        </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InfoBox;","import React from 'react';\r\nimport Kitchen from '@material-ui/icons/Kitchen'\r\nimport './pin.css'\r\nimport InfoBox from './UI/InfoBox';\r\n\r\nconst LocationPin = ({showInfoBox, fridgeData, clickHandler}) => (\r\n  <React.Fragment>\r\n    <div\r\n    className=\"pin\"\r\n    // onMouseEnter={() => props.toggleHover(props.fridgeData.id)}\r\n    // onMouseLeave={() => props.toggleHover(props.fridgeData.id)}\r\n    onClick={(event) => {clickHandler(fridgeData.id, event)} }\r\n  >\r\n    <Kitchen className=\"pin-icon\" />\r\n    {showInfoBox ? (<InfoBox className=\"mobile\" fridgeData={fridgeData} />) : null}\r\n    {(showInfoBox) ? <InfoBox className=\"desktop\" fridgeData={fridgeData} /> : null}\r\n    \r\n  </div>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default LocationPin;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { Anchor, Box, Button, Form, FormField, Image, TextInput, TextArea } from 'grommet';\r\n\r\nimport { checkFridge } from '../redux/actions/fridge';\r\n\r\nconst CheckFridge = (props) => {\r\n  const [image, setImage] = useState(null);\r\n  const dispatch = useDispatch();\r\n  \r\n  const handleImage = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      setImage(image);\r\n    }\r\n  };\r\n\r\n  const submitCheck = (check, fridgeData) => {\r\n    dispatch(checkFridge(check, fridgeData, image));\r\n    props.cancelCheck(false);\r\n  }\r\n\r\n\r\n  return (\r\n    <Box>\r\n              <input type=\"file\" name=\"file\" id=\"file\" class=\"inputfile\" onChange={handleImage} />\r\n              <label for=\"file\">Upload Fridge Picture</label>\r\n              <Form onSubmit={(event) => submitCheck(event.value, props.f)}>\r\n                <Box gap=\"small\">\r\n                  <FormField htmlFor=\"text\">\r\n                    <TextInput size=\"small\" id=\"textinput-id\" name=\"name\" placeholder=\"Your Name (optional)\" />\r\n                  </FormField>\r\n                  <FormField\r\n                    name=\"notes\"\r\n                    label=\"Notes\"\r\n                    htmlFor=\"text-area\"\r\n                    component={TextArea}\r\n                    placeholder=\"leave your notes about this check-in here!\"\r\n                  />\r\n\r\n                  <Box direction=\"row\" gap=\"xsmall\" >\r\n                    <Button size=\"small\" active label=\"Cancel\" onClick={() => props.cancelCheck(false)} />\r\n                    <Button size=\"small\" type=\"submit\" primary label=\"Submit Check\" />\r\n                  </Box>\r\n\r\n                </Box>\r\n              </Form>\r\n            </Box>\r\n  )\r\n};\r\n\r\n\r\nexport default CheckFridge;","import React, { useState, useEffect } from 'react';\r\nimport { Anchor, Box, Button, Heading, Image } from 'grommet';\r\n\r\nimport Launch from '@material-ui/icons/Launch';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\n\r\nimport CheckFridge from './../CheckFridge';\r\n\r\n\r\nconst FridgeModal = (props) => {\r\n\r\n  const [checking, setChecking] = useState(false);\r\n  useEffect(() => {\r\n    \r\n  });\r\n  \r\n\r\n  const { name, neighborhood, streetAddress, notes, link, instagram, lat, lng, checks, imageURL } = props.fridgeData;\r\n  let instaLink = link;\r\n  if (instagram) instaLink = \"http://www.instagram.com/\" + instagram;\r\n\r\n  let lastChecked = null;\r\n\r\n  const getChecks = () => {\r\n    const checkList = [];\r\n    for (let key in checks) {\r\n      checkList.push({\r\n        ...checks[key],\r\n        id: key\r\n      });\r\n    }\r\n    return checkList;\r\n  }\r\n\r\n  if (checks) {\r\n    let c = getChecks();\r\n    let lastC = c[c.length - 1];\r\n    let date = JSON.parse(lastC.date);\r\n    let note = lastC.notes;\r\n    date = new Date(date).toLocaleString();\r\n    let lastPic = imageURL ? (<Image fit=\"contain\" height=\"400\" width=\"250\" src={imageURL} />) : null;\r\n    lastChecked = (\r\n      <Box margin=\"small\" gap=\"xsmall\" style={{ alignItems: \"center\" }}>\r\n        <h3>Last checked: {date}</h3>\r\n        Most recent note:  {note}\r\n        {lastPic}\r\n      </Box>\r\n    );\r\n\r\n  }\r\n\r\n  const checkButton = (\r\n    <Box pad={{ bottom: 'large' }}>\r\n      <Button primary active onClick={() => setChecking(true)} label=\"Check Fridge\" />\r\n    </Box>\r\n  )\r\n\r\n  const checkForm = (\r\n    <CheckFridge f={props.fridgeData} confirmCheck={props.submitCheck} cancelCheck={setChecking} />\r\n  )\r\n\r\n  const editButton = (\r\n    <Button onClick={props.editFridge} label=\"Edit Fridge\" />\r\n  )\r\n\r\n  const getMapLink = (lat, lng) => {\r\n    return 'https://www.google.com/maps/dir/?api=1&destination='.concat(lat, \",\", lng)\r\n  }\r\n\r\n  return (\r\n    <Box overflow=\"hidden\">\r\n      <Box\r\n        flex={false}\r\n        align='center'\r\n        direction='row'\r\n        tag='header'\r\n        style={{ position: 'relative' }}\r\n      >\r\n        <Heading level={4}><strong>\r\n          <Button\r\n            plain\r\n            size=\"large\"\r\n            alignSelf=\"start\"\r\n            onClick={props.onClose}\r\n            label=\"Back To Map\"\r\n            icon={<NavigateBeforeIcon fontSize=\"large\" />} /></strong></Heading>\r\n      </Box>\r\n      <Box\r\n        align=\"center\"\r\n        margin=\"medium\"\r\n        pad=\"medium\"\r\n      >\r\n        <h2>{name}</h2>\r\n        <h2>Neighborhood: {neighborhood}</h2>\r\n        <h3>Location: <Anchor href={getMapLink(lat, lng)}>{streetAddress}<Launch /></Anchor></h3>\r\n        <h3>Notes: {notes}</h3>\r\n\r\n        {instagram && <Button href={instaLink} icon={<InstagramIcon />} label={`@${instagram}`} />}\r\n\r\n        {lastChecked}\r\n        {checking ? checkForm : checkButton}\r\n        {editButton}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default FridgeModal;","import React, { useState } from 'react';\r\nimport { Anchor, Box, Button, CheckBox, Grommet, Heading, Header, Layer, Footer, Text } from 'grommet';\r\nimport classes from '../../containers/container.module.css'\r\n\r\nconst Head = (props) => {\r\n\r\n  return (\r\n    \r\n    <div>\r\n      <Header background=\"light-4\" pad=\"xsmall\" justify=\"center\">\r\n        <Box margin=\"xsmall\" gap=\"none\" alignSelf=\"center\">\r\n          <Heading  margin=\"xsmall\" pad=\"none\" level=\"3\">NYC Community Fridges</Heading>\r\n          <Box gap=\"xsmall\" direction=\"row\">\r\n          <Anchor href='/'>Map</Anchor> |\r\n            <Anchor href='/about'>About</Anchor> | \r\n           <Text>Current Fridge Count : {props.fridges.length}</Text> </Box>\r\n        </Box>\r\n      </Header>\r\n      \r\n        {/* <Button primary label=\"Download JSON Data\" active onClick={props.downloadData} /> */}\r\n        {/* <CheckBox\r\n          name=\"toggle\"\r\n          toggle\r\n          checked={props.showInfoBox}\r\n          label=\"Show Fridge Info Boxes\"\r\n        // onChange={event => this.setState({ showInfoBox: event.target.checked })}\r\n        /> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Head;\r\n\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grommet,\r\n  Heading,\r\n  Form,\r\n  FormField,\r\n  Select,\r\n  TextArea,\r\n  TextInput,\r\n} from 'grommet';\r\nimport { grommet } from 'grommet/themes';\r\n\r\nconst FridgeForm = (props) => {\r\n  const [value, setValue] = useState(props.data ? props.data : {});\r\n\r\n  const onSubmit = (value) => {\r\n    props.onSubmit(value)\r\n    props.onClose();\r\n  }\r\n\r\n  const header = (\r\n    <Heading>{props.type == \"add\" ? \"Add New Fridge\" : \"Editing Fridge\"}</Heading>\r\n  )\r\n  return (\r\n    <Box overflow=\"auto\" pad=\"medium\" gap=\"medium\" margin=\"medium\" margin={{bottom: '100px'}}>\r\n    {header}\r\n    <Form\r\n      onSubmit={({ value }) => onSubmit(value)}\r\n      value={value}\r\n      onChange={nextValue => setValue(nextValue)}\r\n    >\r\n      <FormField name=\"name\" htmlfor=\"textinput-id\" label=\"Fridge Name\">\r\n        <TextInput id=\"textinput-id\" name=\"name\"  placeholder=\"Community Fridge\"/>\r\n      </FormField>\r\n      <FormField name=\"streetAddress\" htmlfor=\"textinput-id\" label=\"Location\">\r\n        <TextInput id=\"textinput-id\" name=\"streetAddress\" placeholder=\"Street Address\" />\r\n      </FormField>\r\n      <FormField name=\"borough\" htmlfor=\"textinput-id\" label=\"Borough\">\r\n      <Select\r\n      name=\"borough\"\r\n      options={['Brooklyn', 'Manhattan', 'Queens', 'Bronx', 'Staten Island']}\r\n      // value={value}\r\n      // onChange={({ option }) => setValue(option)}\r\n      />\r\n      </FormField>\r\n      <FormField name=\"neighborhood\" htmlfor=\"textinput-id\" label=\"Neighborhood\">\r\n        <TextInput id=\"textinput-id\" name=\"neighborhood\" placeholder=\"Bushwick\" />\r\n      </FormField>\r\n      <FormField name=\"instagram\" htmlfor=\"textinput-id\" label=\"Instagram handle\">\r\n        <TextInput id=\"textinput-id\" name=\"instagram\" placeholder=\"@yourfridge\" />\r\n      </FormField>\r\n      <FormField name=\"link\" htmlfor=\"textinput-id\" label=\"Additional Link/Contact\">\r\n        <TextInput id=\"textinput-id\" name=\"link\" placeholder=\"Email address / volunteer form\" />\r\n      </FormField>\r\n      <FormField name=\"notes\" htmlfor=\"textinput-id\" label=\"Notes\">\r\n        <TextArea id=\"textinput-id\" name=\"notes\" placeholder=\"type anything else people should know about this fridge!\" />\r\n      </FormField>\r\n    \r\n      <Box direction=\"row\" gap=\"medium\" pad={{top: \"large\"}}>\r\n        <Button label=\"close\" onClick={props.onClose} />\r\n        <Button type=\"submit\" primary label=\"Submit\" />\r\n        <Button type=\"reset\" label=\"Reset\" />\r\n        \r\n      </Box>\r\n    </Form>\r\n    </Box>\r\n)}\r\n\r\nexport default FridgeForm","import React from 'react';\r\nimport { Anchor, Box, Button, Footer, Grommet, Heading, Paragraph, Text } from 'grommet';\r\n\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport classes from '../containers/container.module.css';\r\n\r\nconst InfoPage = () => (\r\n  <Box>\r\n    <Box pad=\"large\" size=\"medium\" align=\"center\">\r\n      <Heading level=\"3\">Welcome to the NYC Community Fridge Mapping project!</Heading>\r\n      <Paragraph fill=\"true\">\r\n        This map was initially developed in July 2020 to help keep track of the community fridges started by mutual aid groups. < br />\r\n        We're currently working on an app that will help drivers and fridgekeepers to coordinate pickups and deliveries in addition to the map. <br />\r\n        If you're interested in getting involved, drop a message in the general Community Food Share Signal and we'll get you added to the Fridge Tech Chat! <br />\r\nAny questions, comments, or corrections? Email <strong>mars.ballantyne@gmail.com </strong>or DM <strong> @plantpunx </strong>on Instagram. <br />\r\n      Want to help out with a fridge in your neighborhood? Send a DM to the Instagram page listed for the fridge :)\r\n</Paragraph>\r\n\r\n      \r\n      <Heading level=\"4\">Adding a Fridge</Heading>\r\n      <Paragraph fill=\"true\"><em>Please only add / edit fridges if you are a fridgekeeper able to confirm the details and location of the fridge - thanks!</em><br />\r\n      Use the \"Add Fridge\" button to add a new fridge to the map. Add in the name, address, instagram handle, and any other details.</Paragraph>\r\n      <Heading level=\"4\">Editing a Fridge</Heading>\r\n      <Paragraph fill=\"true\">Edit a fridge by clicking the \"edit\" button on the fridge info page. <br />The form will look the same as the \"add\" form - just change whatever information needs to be updated.</Paragraph>\r\n\r\n      <Heading level=\"4\">Checking a Fridge</Heading>\r\n      <Paragraph fill=\"true\">\r\n        From the fridge info page, you can check a fridge to let everyone know the status. Leave a note and a picture, and it will automatically record the date and time so other fridge users can keep track of its current status and contents. \r\n      </Paragraph>\r\n    </Box>\r\n    <Footer className={classes.Footer}\r\n        justify=\"center\"\r\n          background=\"dark-2\"\r\n          pad={{ horizontal: 'large', vertical: \"small\" }}\r\n        >\r\n          <Box height=\"xxsmall\">\r\n            <Text size=\"xsmall\" textAlign=\"center\">Fridges are set up and maintained by mutual aid organizations and volunteers, aided by <Anchor href=\"https://www.instagram.com/iohnyc/\">IOHNYC.</Anchor> Feed people not landfills, food sovereignty for all. </Text>\r\n            <Text size=\"xsmall\" textAlign=\"center\">Site built using <Anchor href=\"https://reactjs.org/\">React, </Anchor> UI components from <Anchor href=\"https://v2.grommet.io/\">Grommet.io. </Anchor> Source code: <Anchor icon={<GitHubIcon fontSize=\"small\"/>} href=\"https://github.com/marsbtyne/nycfridge\" /></Text>\r\n            </Box>\r\n            </Footer>\r\n  </Box>\r\n)\r\n\r\nexport default InfoPage;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport Modal from 'react-modal';\r\nimport { connect } from 'react-redux';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nimport { Box, Button } from 'grommet';\r\n\r\nimport config from '../config';\r\n\r\nimport { \r\n  fetchFridges,\r\n  fetchFridgesJSON,\r\n  setCurrentFridge,\r\n  submitFridge,\r\n  updateFridge\r\n} from '../redux/actions/fridge';\r\nimport { getCurrentFridge } from '../redux/selectors'\r\n\r\nimport LocationPin from './LocationPin';\r\nimport FridgeModal from './UI/FridgeModal'\r\nimport Header from './UI/Header';\r\nimport FridgeForm from './FridgeForm';\r\nimport CheckFridge from './CheckFridge';\r\nimport InfoPage from './InfoPage';\r\n\r\nimport classes from '../containers/container.module.css'\r\nimport './map.css'\r\n\r\nModal.setAppElement('#root');\r\nModal.defaultStyles.content.maxWidth = '700px';\r\nModal.defaultStyles.content.margin = '0 auto'\r\n\r\nclass NewMap extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      isInfoModalOpen: false,\r\n      isSubmitModalOpen: false,\r\n      isEditModalOpen: false,\r\n      isChecking: false,\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchFridges();\r\n  }\r\n\r\n  openSubmissionModal = () => this.setState({ isSubmitModalOpen: true})\r\n  \r\n  openEditModal = () => {\r\n    this.setState({isEditModalOpen: true});\r\n    this.setState({isInfoModalOpen: false})\r\n  }\r\n\r\n  openModal = (id, event) => {\r\n    this.props.setCurrentFridge( id)\r\n    this.setState({ isInfoModalOpen: true})\r\n  }\r\n\r\n  downloadJSON = async () => {\r\n    let response = await this.props.fetchFridgesJSON();\r\n    console.log(response);\r\n      // 2. Create blob link to download\r\n      const url = window.URL.createObjectURL(new Blob([response]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', `sample.json`);\r\n      // 3. Append to html page\r\n      document.body.appendChild(link);\r\n      // 4. Force download\r\n      link.click();\r\n      // 5. Clean up and remove the link\r\n      link.parentNode.removeChild(link);\r\n\r\n}\r\n  closeEditModal = () => {\r\n    this.setState({\r\n      isInfoModalOpen: true,\r\n      isEditModalOpen: false\r\n    })\r\n  }\r\n  \r\n  closeModal = () => {\r\n    this.setState({\r\n      isInfoModalOpen: false,\r\n      isSubmitModalOpen: false,\r\n    })\r\n  }\r\n\r\n  fridgeAdded = (postData) => {\r\n    this.props.submitFridge(postData);\r\n  }\r\n\r\n  updateFridge = (updateData) => {\r\n    console.log(updateData);\r\n    this.props.updateFridge(updateData, this.props.currentFridge.id);\r\n  }\r\n\r\n  checkFridge = () => {\r\n    this.setState({isChecking: true});\r\n  }\r\n\r\n  submitCheck = () => {\r\n\r\n  }\r\n\r\n\r\nrender () {\r\n  let markers = this.props.fridges.map(f => {\r\n    return <LocationPin\r\n    key={f.id}\r\n    lat={f.lat}\r\n    lng={f.lng}\r\n    fridgeData={f}\r\n    showInfoBox={true}\r\n    clickHandler={this.openModal}\r\n  />\r\n  });\r\n  \r\n  let modal;\r\n  if (this.state.isEditModalOpen) {\r\n    modal = (<CheckFridge fridgeData={this.props.currentFridge} />);\r\n    \r\n  } else {\r\n    modal = (<FridgeModal fridgeData={this.props.currentFridge}/>)\r\n}\r\n  return (\r\n  <div>\r\n    <Header\r\n      fridges={this.props.fridges}\r\n      showInfoBox={true}\r\n    />\r\n    <Route path=\"/about\" exact component={InfoPage} />\r\n    <Route path=\"/\" exact render = {() => ( <div className={classes.Container}>\r\n      <Box justify=\"center\" direction=\"row\" pad=\"xsmall\" gap=\"small\">\r\n        <Button primary label=\"Add Fridge\" active onClick={this.openSubmissionModal} />\r\n        </Box>\r\n    <Modal\r\n      isOpen={this.state.isSubmitModalOpen}\r\n      onRequestClose={this.closeModal}\r\n    >\r\n      <FridgeForm\r\n          onClose={this.closeModal}\r\n          onSubmit={this.fridgeAdded}\r\n          type=\"add\"\r\n    />\r\n    </Modal>\r\n    <Modal\r\n      isOpen={this.state.isEditModalOpen}\r\n      onRequestClose={this.closeEditModal}\r\n      >\r\n        <FridgeForm\r\n        onClose={this.closeEditModal}\r\n        onSubmit={this.updateFridge}\r\n        type=\"edit\"\r\n        data={this.props.currentFridge}\r\n      />\r\n      </Modal>\r\n    \r\n  <Box className=\"google-map\">\r\n    <GoogleMapReact\r\n    bootstrapURLKeys={{ key: config.google.apiKey }}\r\n    defaultCenter={config.defaultCenter}\r\n    defaultZoom={config.defaultZoom}\r\n    yesIWantToUseGoogleMapApiInternals\r\n    >\r\n      {markers}\r\n    </GoogleMapReact>\r\n    <Modal\r\n      isOpen={this.state.isInfoModalOpen}\r\n      onRequestClose={this.closeModal}\r\n    >\r\n      <FridgeModal\r\n        fridgeData={this.props.currentFridge}\r\n        onClose={this.closeModal}\r\n        submitCheck={this.submitCheck}\r\n        editFridge={this.openEditModal}\r\n      />\r\n    </Modal>\r\n    </Box>\r\n    </div>)} />\r\n\r\n  </div>\r\n)\r\n\r\n}\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    fridges: state.fridges,\r\n    currentFridge: getCurrentFridge(state),\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    submitFridge: (postData) => dispatch(submitFridge(postData)),\r\n    updateFridge: (updateData, id) => dispatch(updateFridge(updateData, id)),\r\n    fetchFridges: () => dispatch(fetchFridges()),\r\n    fetchFridgesJSON: () => dispatch(fetchFridgesJSON()),\r\n    setCurrentFridge: (fridgeID) => dispatch(setCurrentFridge(fridgeID)),\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMap)","import React from 'react';\r\nimport classes from './Spinner.module.css'\r\n\r\nconst spinner = () => (\r\n  <div className={classes.Loader}>Loading...</div>\r\n)\r\n\r\nexport default spinner;","import React, { Component } from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { connect } from 'react-redux';\r\nimport { Anchor, Box, Button, CheckBox, Heading, Image, Grommet, Layer, Form, FormField, Text, TextInput, TextArea } from 'grommet';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport Launch from '@material-ui/icons/Launch';\r\n\r\nimport config from '../config';\r\n\r\n\r\n\r\nimport LocationPin from './LocationPin';\r\nimport './map.css'\r\n\r\nimport * as actions from '../redux/actions/fridge';\r\n\r\n\r\nclass Map extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // create a ref to store the textInput DOM element\r\n    this.textInput = React.createRef();\r\n    this.focusTextInput = this.focusTextInput.bind(this);\r\n    this.submitButton = React.createRef();\r\n    this.state = {\r\n      modal: null,\r\n      checking: false,\r\n      url: \"\",\r\n      image: null,\r\n      progress: 0,\r\n      showInfoBox: true\r\n    }\r\n  }\r\n\r\n  focusTextInput() {\r\n    this.textInput.current.focus();\r\n  }\r\n\r\n  bindResizeListener = (map, maps) => {\r\n    maps.event.addDomListenerOnce(map, 'idle', () => {\r\n      map.gestureHandling = \"greedy\"\r\n    });\r\n  };\r\n\r\n  handleApiLoaded = (map, maps) => {\r\n    console.log('map', map, maps)\r\n    map.gestureHandling = \"greedy\"\r\n    // Bind the resize listener\r\n    this.bindResizeListener(map, maps);\r\n  }\r\n\r\n  onModalOpen = (id) => {\r\n    this.props.getFridge(id);\r\n    this.setState({ modal: id });\r\n  }\r\n  modalClosedHandler = () => {\r\n    this.setState({\r\n      modal: null\r\n    });\r\n  }\r\n\r\n  confirmCheck = (data, fridge) => {\r\n    this.props.onFridgeChecked(data, fridge, this.state.image)\r\n    this.setState({ checking: false })\r\n  }\r\n\r\n  getMapLink = (fridge) => {\r\n    return 'https://www.google.com/maps/dir/?api=1&destination='.concat(fridge.lat, \",\", fridge.lng)\r\n  }\r\n\r\n  getChecks = (currentFridge) => {\r\n    const checks = [];\r\n    for (let key in currentFridge.checks) {\r\n      checks.push({\r\n        ...currentFridge.checks[key],\r\n        id: key\r\n      });\r\n    }\r\n    return checks;\r\n  }\r\n\r\n  handleChange = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      this.setState(() => ({ image }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let f = this.props.currentFridge;\r\n    let modalInfo = null;\r\n    if (f) {\r\n      let status;\r\n      let check;\r\n      let lastChecked;\r\n      if (f.confirmed) {\r\n        status = (\r\n          <h4>Status: Confirmed</h4>\r\n        )\r\n        check = (\r\n          <Box pad={{ bottom: 'large' }}>\r\n            <Button primary active onClick={() => this.setState({ checking: true })} label=\"Check Fridge\" />\r\n          </Box>\r\n        )\r\n        if (f.checks) {\r\n          let c = this.getChecks(f)\r\n          let lastC = c[c.length - 1];\r\n          let date = JSON.parse(lastC.date);\r\n          let note = lastC.notes;\r\n          date = new Date(date);\r\n          let parsed = date.toLocaleString();\r\n          let lastPic = f.imageURL ? (<Image fit=\"contain\" height=\"400\" width=\"250\" src={f.imageURL} />) : null;\r\n          lastChecked = (\r\n            <Box margin=\"small\" gap=\"xsmall\" style={{ alignItems: \"center\" }}>\r\n              <h3>Last checked: {parsed}</h3>\r\n              Most recent note:  {note}\r\n              {lastPic}\r\n            </Box>\r\n          )\r\n        }\r\n        if (this.state.checking) {\r\n          check = (\r\n            <Box>\r\n              <input type=\"file\" name=\"file\" id=\"file\" class=\"inputfile\" onChange={this.handleChange} />\r\n              <label for=\"file\">Upload Fridge Picture</label>\r\n              <Form onSubmit={(event) => this.confirmCheck(event.value, f)}>\r\n                <Box gap=\"small\">\r\n                  <FormField htmlFor=\"text\">\r\n                    <TextInput ref={this.textInput} onClick={this.focusTextInput} size=\"small\" id=\"textinput-id\" name=\"name\" placeholder=\"Your Name (optional)\" />\r\n                  </FormField>\r\n                  <FormField\r\n                    name=\"notes\"\r\n                    label=\"Notes\"\r\n                    htmlFor=\"text-area\"\r\n                    ref={this.textInput}\r\n                    component={TextArea}\r\n                    placeholder=\"leave your notes about this check-in here!\"\r\n                  />\r\n\r\n                  <Box direction=\"row\" gap=\"xsmall\" >\r\n                    <Button size=\"small\" active label=\"Cancel\" onClick={() => this.setState({ checking: false })} />\r\n                    <Button ref={this.submitButton} size=\"small\" type=\"submit\" primary label=\"Submit Check\" />\r\n                  </Box>\r\n\r\n                </Box>\r\n              </Form>\r\n            </Box>)\r\n        }\r\n      }\r\n      else {\r\n        status = (<Box><h4>Status: Unconfirmed</h4><Button primary active onClick={() => this.props.onFridgeConfirmed(f)} label=\"Confirm Fridge\" /></Box>)\r\n      }\r\n\r\n      modalInfo = (\r\n        <Box\r\n          align=\"center\"\r\n          margin=\"medium\"\r\n          pad=\"medium\"\r\n          overflow=\"hidden\"\r\n        >\r\n\r\n          <h2>{f.name}</h2>\r\n          <h2>Neighborhood: {f.neighborhood}</h2>\r\n          <h3>Location: <Anchor href={this.getMapLink(f)}>{f.streetAddress}<Launch /></Anchor></h3>\r\n          <h3>Notes: {f.notes}</h3>\r\n          <Button href={f.link} label=\"Social Media\" />\r\n          {status}\r\n          {lastChecked}\r\n          {check}\r\n        </Box>\r\n      );\r\n    }\r\n    return (\r\n      <Box className=\"google-map\">\r\n        {this.state.modal && (\r\n          <Layer full=\"vertical\" onClickOutside={this.modalClosedHandler}>\r\n            <Box overflow='hidden' width=\"large\">\r\n              <Box\r\n                flex={false}\r\n                pad={{ horizontal: 'medium' }}\r\n                align='center'\r\n                direction='row'\r\n                tag='header'\r\n                justify='between'\r\n                style={{ position: 'relative' }}\r\n              >\r\n                <Heading level={4}><strong>\r\n                  <Button\r\n                    plain\r\n                    size=\"large\"\r\n                    alignSelf=\"start\"\r\n                    onClick={this.modalClosedHandler}\r\n                    label=\"Back To Map\"\r\n                    icon={<NavigateBeforeIcon fontSize=\"large\" />} /></strong></Heading>\r\n              </Box>\r\n              <Box flex={true} align='center' background='light-1' overflow='auto'>\r\n                <Box flex={false} background='white'>\r\n                  {modalInfo}\r\n                  <Button alignSelf=\"center\" margin=\"medium\" onClick={this.modalClosedHandler} label=\"Back To Map\" icon={<NavigateBeforeIcon />} />\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Layer>)}\r\n        <GoogleMapReact\r\n\r\n          bootstrapURLKeys={{ key: config.google.apiKey }}\r\n          defaultCenter={this.props.location}\r\n          defaultZoom={this.props.zoomLevel}\r\n          yesIWantToUseGoogleMapApiInternals\r\n          onGoogleApiLoaded={({ map, maps }) => this.handleApiLoaded(map, maps)}\r\n        >\r\n          {this.props.fridges.map(f => (\r\n            <LocationPin\r\n              lat={f.lat}\r\n              lng={f.lng}\r\n              fridgeData={f}\r\n              showInfoBox={this.props.showInfoBox}\r\n              toggleHover={this.props.toggleHover}\r\n              hover={this.props.hover}\r\n              onModalOpen={this.onModalOpen}\r\n            />\r\n          ))}\r\n        </GoogleMapReact>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentFridge: state.currentFridge\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getFridge: (fridgeID) => dispatch(actions.getFridge(fridgeID)),\r\n    onFridgeConfirmed: (fridge) => dispatch(actions.confirmFridge(fridge)),\r\n    onFridgeChecked: (data, fridge, image) => dispatch(actions.checkFridge(data, fridge, image)),\r\n    getFridgeChecks: (id) => dispatch(actions.getFridgeChecks(id))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);","import React, { Component } from 'react';\r\nimport { Anchor, Box, Button, CheckBox, Grommet, Heading, Header, Layer, Footer, Text } from 'grommet';\r\nimport { connect } from 'react-redux';\r\n\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nimport Spinner from '../components/UI/Spinner';\r\nimport FridgeModal from '../components/UI/FridgeModal';\r\nimport FridgeForm from '../components/FridgeForm';\r\nimport * as actions from '../redux/actions/fridge';\r\n\r\nimport classes from './container.module.css';\r\nimport firebase from '../firebase';\r\nimport Map from '../components/Map';\r\n\r\nclass FridgeFinder extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      location: {\r\n        address: '252 Broadway Brooklyn NY 11211',\r\n        lat: 40.7,\r\n        lng: -73.9\r\n      },\r\n      hover: null,\r\n      modal: false,\r\n      url: \"\",\r\n      image: null,\r\n      progress: 0,\r\n      showInfoBox: true\r\n    }\r\n  }\r\n\r\n  onModalOpen = () => {\r\n    this.setState({ modal: true });\r\n  }\r\n  modalClosedHandler = () => {\r\n    this.setState({ modal: false });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onFridgesLoad();\r\n  }\r\n\r\n  toggleHover = (id) => {\r\n    let h = this.state.hover === id ? null : id;\r\n    this.setState({ hover: h })\r\n  };\r\n\r\n  fridgeAdded = (fridge) => {\r\n    this.props.onFridgeAdded(fridge);\r\n  }\r\n\r\n  addFridge = () => {\r\n    this.onModalOpen();\r\n  }\r\n\r\n  render() {\r\n    let map = (<Spinner />);\r\n    let fridgeSubmission = (<Spinner />);\r\n    if (this.props.fridges) {\r\n      map = (\r\n        <Map\r\n          location={this.state.location}\r\n          zoomLevel={12}\r\n          toggleHover={this.toggleHover}\r\n          hover={this.state.hover}\r\n          showInfoBox={this.state.showInfoBox}\r\n          fridges={this.props.fridges}\r\n        />\r\n      )\r\n      fridgeSubmission = (<Layer\r\n        modal\r\n        animation=\"fadeIn\"\r\n        onEsc={this.modalClosedHandler}\r\n        onClickOutside={this.modalClosedHandler}\r\n      >\r\n        <FridgeForm\r\n          onClose={this.modalClosedHandler}\r\n          onSubmit={this.fridgeAdded}\r\n        />\r\n      </Layer>)\r\n    }\r\n    return (\r\n      <div className={classes.Container}>\r\n        <div className={classes.contentWrap}>\r\n        <Header background=\"light-4\" pad=\"xsmall\" justify=\"center\">\r\n          <Box gap=\"small\" alignSelf=\"center\">\r\n            <Heading level=\"3\">NYC Community Fridges</Heading>\r\n            <Text>Current Fridge Count : {this.props.fridges.length}</Text>\r\n          </Box>\r\n        </Header>\r\n        <Box justify=\"center\" direction=\"row\" pad=\"xsmall\" gap=\"small\">\r\n          <Button primary label=\"Add Fridge\" active onClick={this.addFridge} />\r\n          <CheckBox\r\n            name=\"toggle\"\r\n            toggle\r\n            checked={this.state.showInfoBox}\r\n            label=\"Show Fridge Info Boxes\"\r\n            onChange={event => this.setState({ showInfoBox: event.target.checked })}\r\n          />\r\n        </Box>\r\n        {this.state.modal && fridgeSubmission}\r\n        {map}\r\n        </div>\r\n        <Footer className={classes.Footer}\r\n        justify=\"center\"\r\n          background=\"dark-2\"\r\n          pad={{ horizontal: 'large', vertical: \"small\" }}\r\n        >\r\n          <Box height=\"xxsmall\">\r\n            <Text size=\"xsmall\" textAlign=\"center\">Fridges are set up and maintained by mutual aid organizations and volunteers, aided by <Anchor href=\"https://www.instagram.com/iohnyc/\">IOHNYC.</Anchor> Feed people not landfills, food sovereignty for all. </Text>\r\n            <Text size=\"xsmall\" textAlign=\"center\">Site built using <Anchor href=\"https://reactjs.org/\">React, </Anchor> UI components from <Anchor href=\"https://v2.grommet.io/\">Grommet.io. </Anchor> Source code: <Anchor icon={<GitHubIcon fontSize=\"small\"/>} href=\"https://github.com/marsbtyne/nycfridge\" /></Text>\r\n            </Box>\r\n            </Footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    fridges: state.fridges,\r\n    loading: state.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //onFridgesLoad: () => dispatch(actions.fetchFridges()),\r\n    onFridgeAdded: (fridge) => dispatch(actions.submitFridge(fridge)),\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FridgeFinder);","import React, { Component } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Grommet, Box, TextInput, Text, Heading, Button } from 'grommet';\r\nimport {Helmet} from 'react-helmet'\r\nimport './App.css';\r\nimport firebase from './firebase';\r\nimport NewMap from './components/NewMap';\r\n\r\nimport FridgeFinder from './containers/FridgeFinder';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  \r\n  render (props) {\r\n    const theme = {\r\n      global: {\r\n       colors: {\r\n         'light-2': '#f5f5f5',\r\n         'text': {\r\n           light: 'rgba(0, 0, 0, 0.87)',\r\n         },\r\n       },\r\n       edgeSize: {\r\n         small: '14px',\r\n       },\r\n       elevation: {\r\n         light: {\r\n           medium: '0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12)',\r\n         },\r\n       },\r\n        font: {\r\n          family: 'Roboto',\r\n          size: '14px',\r\n          height: '20px',\r\n        },\r\n      },\r\n    };\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"App\">\r\n      <Helmet>\r\n    <title>Map of NYC Community Fridges</title>\r\n    <meta name=\"description\" content=\"Map of free community fridges and food shares across New York City\" />\r\n    <meta name=\"keywords\" content=\"Community Fridges, Mutual Aid, fridge, nyc, foodshare, free food, community, refrigerators, fridge map, nyc fridges, nyc free food, nyc fridge map, nyc community fridges\"></meta>\r\n  </Helmet>\r\n  <Grommet>\r\n    \r\n    <NewMap />\r\n  </Grommet>\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import Geocode from \"react-geocode\";\r\nimport axios from './axios';\r\nimport config from './config';\r\n\r\nexport const fetchFridges = async () =>  {\r\n  const fetchedFridges = [];\r\n    try {\r\n      const response = await axios.get('/fridges.json');\r\n      for (let key in response.data) {\r\n        fetchedFridges.push({\r\n          ...response.data[key],\r\n          id: key\r\n        });\r\n      }\r\n      return fetchedFridges;\r\n    } catch (error) {\r\n      console.error('Data was not fetched.')\r\n    }\r\n}\r\n\r\nexport const fetchFridgesSVC = async () =>  {\r\n  const fetchedFridges = [];\r\n    try {\r\n      const response = await axios.get('/fridges.json');\r\n      for (let key in response.data) {\r\n        fetchedFridges.push({\r\n          ...response.data[key],\r\n          id: key\r\n        });\r\n      }\r\n      return response\r\n    } catch (error) {\r\n      console.error('Data was not fetched.')\r\n    }\r\n}\r\n\r\nexport const getFridge = async (fridgeID) => {\r\n  let url = '/fridges/'.concat(fridgeID, '.json');\r\n  let fetchedFridge;\r\n  try {\r\n    const response = await axios.get(url);\r\n      fetchedFridge = {\r\n        ...response.data,\r\n        id: fridgeID\r\n      }\r\n      console.log(fetchedFridge)\r\n    } catch (error) {\r\n      console.log(error);\r\n    };\r\n  }\r\n\r\nexport const postFridge = async (submissionData) => {\r\n  Geocode.setApiKey(config.google.apiKey);\r\n  let updatedData = {};\r\n  let streetAddress = submissionData.streetAddress;\r\n  let fullAddress = streetAddress.concat(\" \" , submissionData.borough, \" NY\");\r\n\r\n  try {\r\n    const geocodeResponse =  await Geocode.fromAddress(fullAddress);\r\n    const { lat, lng } = geocodeResponse.results[0].geometry.location;\r\n    updatedData = {\r\n      ...submissionData, \r\n      lat: lat,\r\n      lng: lng\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Could not fetch coordinates\");\r\n  }\r\n  try {\r\n    const response = await axios.post('/fridges.json', updatedData);\r\n  } catch (error) {\r\n    console.error(\"Could not submit to database\");\r\n  }\r\n}","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  fridges: [],\r\n  loading: false,\r\n  submitted: false,\r\n  currentFridge: null\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_FRIDGE_START:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case actionTypes.LOAD_FRIDGES:\r\n      return {\r\n        ...state,\r\n        fridges: action.data,\r\n        loading: false\r\n      }\r\n    case actionTypes.GET_FRIDGE:\r\n      return {\r\n        ...state,\r\n        currentFridge: action.data,\r\n        loading: false\r\n      }\r\n    case actionTypes.ADD_FRIDGE_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        submitted: false\r\n      }\r\n    case actionTypes.SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        currentFridge: action.data\r\n      }\r\n    case actionTypes.CHECK_START: {\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    }\r\n    case actionTypes.ADD_FRIDGE:\r\n      const newFridge = {\r\n        ...action.data,\r\n        id: action.id,\r\n        confirmed: false\r\n      }\r\n      return {\r\n        ...state,\r\n        fridges: state.fridges.concat(newFridge),\r\n        loading: false,\r\n        submitted: true\r\n      }\r\n    case actionTypes.UPDATE_FRIDGE:\r\n      let updatedF = state.fridges.map(f => {\r\n        if (f.id === state.currentFridge){\r\n          f = action.data\r\n        }\r\n        return f;\r\n      });\r\n      return {\r\n        ...state,\r\n        fridges: updatedF,\r\n      }\r\n    case actionTypes.POST_CHECK_IMAGE:\r\n      return {\r\n        ...state,\r\n        currentFridge: {\r\n          ...state.currentFridge,\r\n          imageURL: action.url\r\n        },\r\n        loading:false\r\n      }\r\n    case actionTypes.CHECK_FRIDGE:\r\n    let updatedFridges = state.fridges.map(f => {\r\n        if (f.id === state.currentFridge){\r\n          if (!f.checks) f.checks = {};\r\n          f.checks[action.id] = action.data;\r\n        }\r\n        return {\r\n          ...f,\r\n          lastCheck: action.id\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        fridges: updatedFridges,\r\n      }\r\n      \r\n    case actionTypes.GET_FRIDGE_CHECKS:\r\n      return {\r\n        ...state,\r\n        currentFridge: {\r\n          ...state.currentFridge,\r\n          checks: action.data\r\n        }\r\n      }\r\n    case actionTypes.CONFIRM_FRIDGE:\r\n      const fridges = state.fridges;\r\n      let updated = fridges.map(f => {\r\n        if (f.id === action.id){\r\n          f.confirmed = true;\r\n        }\r\n        return f;\r\n      });\r\n      return {\r\n        ...state,\r\n        fridges: updated,\r\n        currentFridge: {\r\n          ...state.currentFridge,\r\n          confirmed: true\r\n        }\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk'; \r\nimport { Provider } from 'react-redux';\r\n\r\nimport config from './config';\r\nimport { fetchFridges } from './svc'\r\n\r\nimport reducer from './redux/reducers/fridge';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nwindow.init = async () => {\r\n  const fridges = await fetchFridges();\r\n  const app  = (\r\n    <Provider store={store}>\r\n        <App fridges={fridges}/>\r\n    </Provider>\r\n  )\r\n  ReactDOM.render(app, document.getElementById('root'));\r\n}\r\n\r\nconst script = document.createElement('script');\r\nscript.src = `https://maps.googleapis.com/maps/api/js?key=${config.google.apiKey}&callback=init`;\r\nscript.defer = true;\r\ndocument.head.appendChild(script);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"container_Container__X1m1k\",\"contentWrap\":\"container_contentWrap__1E3eC\",\"Footer\":\"container_Footer__3RF1D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2pVUm\",\"Info\":\"Modal_Info__1E4_K\",\"popupBubble\":\"Modal_popupBubble__1Z61H\",\"popupBubbleAnchor\":\"Modal_popupBubbleAnchor__3g4TB\",\"popupContainer\":\"Modal_popupContainer__3hmTP\"};"],"sourceRoot":""}